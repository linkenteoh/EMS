@model EventManagementSystem.Models.EditProfileVM
@{
    ViewBag.Title = "Edit User Settings";

}
@section head{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <style>
        #role {
            cursor: pointer;
        }

        .radio input {
            position: absolute;
            display: block;
            left: 99%;
            bottom: 90%;
        }

        .radio :checked {
        }

        .radio {
            position: relative;
            border-radius: 10px;
            width: 49%;
            padding-top: 13vh;
            padding-bottom: 13vh;
            cursor: pointer;
            box-shadow: 1px 3px 6px 1px rgba(148,129,148,1);
        }

            .radio:hover {
                box-shadow: 2px 10px 21px 1px rgba(148,129,148,1);
                animation: pop 0.4s forwards;
            }

        @@keyframes pop {
            from {
                bottom: 0px
            }

            to {
                bottom: 1em
            }
        }

        #stud {
            float: left;
        }

        #outs {
            float: right;
            margin-top: 10px;
        }

        .roleText {
            font-size: 3em;
            font-weight: 300;
        }

        .outerDiv {
            padding: 5px 50px;
            margin-top: 30px;
        }

        input[type="file"] {
            display: none;
        }

        .custom-file-upload {
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
        }
    </style>
}
<div class="outerDiv">
    <h2>User profile settings</h2>
    <hr />

    <form method="post" enctype="multipart/form-data" id="myForm" name="myForm" class="myForm">
        <div id="second">
            <h3><b>Change your details</b></h3>

            @Html.AntiForgeryToken()

            <div class="form-row">

            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <div id="cameraDiv" style="display:none;text-align:center">
                        <div id="Camera" style="border-radius:50%;"></div>
                        <input type="button" class="btn btn-warning" value="Capture" onclick="webcam.capture();" />
                    </div>

                    <div id="optDiv" style="text-align:center;display: block">
                        <label class="upload custom-file-upload">
                            @Html.TextBoxFor(m => m.Photo, new { type = "file", accept = "image/jpeg,image/png", hidden = "", id = "photoInput" })
                            <img id="blah" src="~/Photo/@Model.PhotoUrl" alt="your image" style="width:250px; height: 250px; border-radius:50%; object-fit:cover" />
                        </label><br />
                        @Html.ValidationMessageFor(m => m.Photo, "", new { @class = "text-danger" })<br />
                        <i class="fa fa-camera" style="font-size:48px;color:darkslateblue;cursor:pointer" aria-hidden="true" onclick="toggleCamera()"></i>

                    </div>
                </div>

                <div class="form-group col-md-8">
                    <div class="form-group col-md-6" style="padding-left:0px">

                        @Html.LabelFor(m => m.name, "Name")
                        @Html.ValidationMessageFor(m => m.name, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(m => m.name, new { @class = "form-control", placeholder = "Your name" })
                        @Html.TextBoxFor(m => m.Id, new { @class = "form-control", placeholder = "Your name", value = Model.Id, style = "display:none;" })
                    </div>
                    <div class="form-group col-md-6" style="padding-left:0px">
                        @Html.LabelFor(m => m.username, "Username")
                        <span style="width:90%;" name=@Model.username id=@Model.username class="form-control" disabled>@Model.username</span>
                        @Html.TextBoxFor(m => m.username, new { @class = "form-control", placeholder = "Your name", style="display:none;" })

                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.email, "Email")
                            @Html.ValidationMessageFor(m => m.email, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(m => m.email, new { @class = "form-control", placeholder = "Email" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.contact_no, "Contact")
                            @Html.ValidationMessageFor(m => m.contact_no, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(m => m.contact_no, new { @class = "form-control", placeholder = "0123456789" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.newPassword, "New Password")
                            @Html.ValidationMessageFor(m => m.newPassword, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(m => m.newPassword, new { @class = "form-control", placeholder = "Password", type = "password" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.confirmPassword, "Confirm new password")
                            @Html.ValidationMessageFor(m => m.confirmPassword, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(m => m.confirmPassword, "", new { @class = "form-control", placeholder = "Confirm password", type = "password" })

                        </div>
                    </div>
                    @Html.TextBoxFor(m => m.webPhoto, new { style = "display:none" })

                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <hr />
                            <small>*Photo uploaded should not larger than 1mb and JPG/PNG allowed only.</small>
                        </div>
                    </div>


                    <div class="form-row">
                        <div class="form-group col-md-10">
                            <br />
                            <button class="btn btn-primary">Submit</button>
                        </div>
                        <div class="form-group col-md-2">
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </form>

</div>



@section foot{
    <script src="@Url.Content("~/Scripts/jquery.webcam.js")">
    </script>

    <script>
        $('#photoInput').validate({
            ignore: [],
            // any other options and/or rules
        });

        function toggleCamera() {
            $("#cameraDiv").css('display', 'block');
            $("#optDiv").css('display', 'none');
        }

        $('body').on('click', 'input[type="radio"]', function () {
            $("#first").css('display', 'none');
            $("#second").css('display', 'block');
        });

        function isPostBack() {
            return document.referrer.indexOf(document.location.href) > -1;
        }

        if (isPostBack()) {
            $("#first").css('display', 'none');
            $("#second").css('display', 'block');
        }

        function validatePhoto(f) {
            let reType = /^image\/(jpeg|png)$/i;
            let reName = /^.+\.(jpg|jpeg|png)$/i;

            return f &&
                f.size <= 1 * 1024 * 1024 &&
                reType.test(f.type) &&
                reName.test(f.name);
        }

        let src = null;

        $('.upload input').change(e => {
            let f = e.target.files[0];
            let img = $(e.target).siblings('img')[0];

            if (!src) src = img.src;

            if (validatePhoto(f)) {
                img.src = URL.createObjectURL(f);
            }
            else {
                img.src = src;
                e.target.value = '';
            }

            $(e.target).valid();
        });

        function bckFunc() {
            $("#first").css('display', 'block');
            $("#second").css('display', 'none');        }


        $("#Camera").webcam({
             width: 320,
             height: 240,
             mode: "save",
             swffile: "@Url.Content("~/Scripts/jscam.swf")",
             onTick: function () { },
            onSave: function () {
                $("#cameraDiv").css('display', 'none');
                $("#optDiv").css('display', 'block');
                $.ajax({
                    url: '/Account/GetTempName',
                    type: 'POST',
                    success: function (temp) {
                        alert('Captured successfull.');
                        $('#blah').attr("src", "../Photo/" + temp);
                        $('#webPhoto').val(temp);
                    },
                    error: function () {
                        alert("Some error occured!");
                    }
                });
             },
            onCapture: function () {
                webcam.save("@Url.Content("~/Account/Capture")/");

             },
             debug: function () { },
            onLoad: function () {

            }
        });
    </script>
}
