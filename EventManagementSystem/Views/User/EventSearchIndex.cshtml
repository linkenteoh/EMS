
@{
    ViewBag.Title = "Events Joined";

    var results = new AjaxOptions
    {
        Url = "/User/SearchEventIndex",
        HttpMethod = "get",
        LoadingElementId = "loader",
        UpdateTargetId = "eventTable",
    };
    var attr = new
    {
        @class = "form-horizontal"
    };
}

@section head{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <style>
        #loader {
            text-align: center;
            display: none;
        }

        #paged, #countModel {
            margin:10px;
            text-align: center;
            display: block;
        }

        #eventTable {
            margin: 10px 10px 10px 10px;
            margin-top: 50px;
        }
    </style>
}

    <h3>@ViewBag.Title</h3>
    <hr />
    @using (Ajax.BeginForm("EventSearchIndex", "User", results, attr))
    {
        <span class="btn btn-secondary dropdown-toggle searchButton" style="margin-left:10px;">Filter</span>
        <span>@Html.DropDownList("sort", ViewBag.SortList as SelectList, "Sort By", new { @class = "btn btn-secondary", onChange = "sortData(this);" })</span>
        <span>@Html.TextBox("searchName", null, new { data_upper = "", autofocus = "",
            @class = "form-control", style = "display:inline;", placeholder = "Search..." })
        </span>
        <i class="fa fa-search fa-1x"></i>
        <div class="parent">
            <div class="searchCont" style="display:none;position:absolute; width:100%; background:white; opacity:0.98">
                <div style="padding-left: 10px;">
                    <h3>Filters</h3>
                    <div class="form-group row">
                        @Html.Label("name", "Event Name", new { @class = "control-label col-sm-2" })
                        @Html.TextBox("name", null, new { maxlength = "10", data_upper = "", autofocus = "", type = "search", @class = "form-control" })
                    </div>
                    <div class="form-group row">
                        @Html.Label("startDate", "Date From", new { @class = "control-label col-sm-2" })
                        @Html.TextBox("startDate", null, "{0: yyyy-MM-dd}", new { type = "date", @class = "form-control col-sm-2" })
                        @Html.Label("endDate", "To", new { @class = "control-label col-sm-1" })
                        @Html.TextBox("endDate", null, "{0: yyyy-MM-dd}", new { type = "date", @class = "form-control col-sm-2" })
                    </div>
                    <div class="form-group row">
                        @Html.Label("startTime", "Time From", new { @class = "control-label col-sm-2" })
                        @Html.TextBox("startTime", null, "{0: HH:mm}", new { type = "time", @class = "form-control timepicker col-sm-2" })
                        @Html.Label("endTime", "To", new { @class = "control-label col-sm-1" })
                        @Html.TextBox("endTime", null, "{0: HH:mm}", new { type = "time", @class = "form-control timepicker col-sm-2" })
                    </div>
                    <div class="form-group row">
                        @Html.Label("priceFrom", "Price(RM) From", new { @class = "control-label col-sm-2" })
                        @Html.TextBox("priceFrom", null, new { type = "number", @class = "form-control col-sm-2", placeholder = "0.00", min = "0" })
                        @Html.Label("priceTo", "To", new { @class = "control-label col-sm-1" })
                        @Html.TextBox("priceTo", null, new { type = "number", @class = "form-control col-sm-2", placeholder = "0.00", min = "0" })
                    </div>
                    <div class="form-group row">
                        @Html.Label("venue", "Venue", new { @class = "control-label col-sm-2" })
                        @Html.DropDownList("venue", ViewBag.VenueList as SelectList, "- Select One -", new { @class = "control-label col-sm-2 btn btn-secondary form-control" })
                        <div class="col-sm-offset-1 col-sm-1">
                            <input type="submit" class="btn btn-primary searchBtn" name="Search" value="Search" />
                        </div>
                        <div class="col-sm-1">
                            <input type="reset" class="btn btn-primary " name="Reset" value="Reset" onclick="resetData();" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div id="eventTable" style="margin-top:10px;">
        <div id="loader"><img src="~/Images/loader.gif"></div>
        @Html.Partial("_EventResults")
    </div>

@section foot{

    <script>
        //when search button click
        jQuery(document).on('click', '.searchButton', function () {
                if (jQuery('.parent').hasClass('menuActive')) {
                    jQuery('.parent').removeClass('menuActive');
                    jQuery('.parent .menu').slideUp(0);
                }
                jQuery('.parent').toggleClass('searchActive').children('.searchCont').slideToggle(200);
            });

        // Search Name
        let timer = null;
        $('#searchName').on('input', e => {
            // when user enter text, it will clear previous execution
            clearTimeout(timer);
            timer = setTimeout(() => $(e.target.form).submit(), 1000);
        });

        // Sort By
        function sortData(e) {
            e.form.submit();
        }

        // reset data filter
        function resetData() {
            $("input .form-control").val(0);
        }
    </script>
}

